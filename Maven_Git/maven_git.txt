1)write mavan lif cycle :
Validate, Compile, Test, Package, Integration test, Verify, Install and Deploy

2)
mvn clean: Cleans the project and removes all files generated by
the previous build.
mvn compile: Compiles source code of the project.
mvn test: Runs tests for the project.
mvn install: Deploys the packaged JAR/ WAR file to the local
repository.
mvn --version : it will show which version we are using

3)Web services
A web service is a software system that supports interoperable machine-to-machine interaction over a network. 

4)Rest controller
RestController is a Spring annotation that is used to build REST API in a declarative way. 
RestController annotation is applied to a class to mark it as a request handler, and Spring will do the building and provide the RESTful web service at runtime.

5)web services methods
GET
The GET method refers to a Hypertext Transfer Protocol (HTTP) method that is
applied while requesting information from a particular source.
POST
POST is a request method supported by HTTP used by the World Wide Web. By
design, the POST request method requests that a web server accept the data
enclosed in the body of the request message, most likely for storing it.
DELETE
The DELETE method is defined to be idempotent, which means that sending the
same HTTP DELETE request multiple times will have the same effect on the server
and will not additionally affect the state or cause additional side effects.
PUT
PUT method is used to update resource available on the server. Typically, it
replaces whatever exists at the target URL with something else.

6)life cycle of git
In Step – 1, We first clone any of the code residing in the remote repository to make our own local repository.
In Step-2 we edit the files that we have cloned in our local repository and make the necessary changes in it.
In Step-3 we commit our changes by first adding them to our staging area and committing them with a commit message.
In Step – 4 and Step-5 we first check whether there are any of the changes done in the remote repository by some other users and we first pull that changes.
If there are no changes we directly proceed with Step – 6 in which we push our changes to the remote repository and we are done with our work.

7)GIT commands
git init
initialize an existing directory as a Git repository
git push [alias] [branch]
Transmit local branch commits to the remote repository branch
git pull
fetch and merge any commits from the tracking remote branch
git add [file]
add a file as it looks now to your next commit (stage)
git commit -m “[descriptive message]”
commit your staged content as a new commit snapshot
git checkout
switch to another branch and check it out into your working directory
git log
show all commits in the current branch’s history
git merge [branch]
merge the specified branch’s history into the current one
git reset --hard [commit]
clear staging area, rewrite working tree from specified commit

8)
What is Centralized Version Control
In centralized version control, there is a set of local computers and a single server. 
The server operates as the central location. 
When a developer changes the source code in his local machine, those changes get saved in the central server. 
The working copy is available in the local machine, but the versions are saved in the server. 
In other words, the central location manages the versions.

What is Distributed Version Control
Distributed version control provides solutions to the limitations of centralized version control. 
There is a set of computers and a server. The server has a remote repository. 
At the same time, each computer has its own local repository. 
There is no issue of the failure of the server as each machine has a local repository.  
The repository is distributed among multiple machines. 
Therefore, we call this a distributed version control system.